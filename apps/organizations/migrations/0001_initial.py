# Generated by Django 5.2.5 on 2025-09-17 06:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(default='Kloud Technologies Ltd', max_length=255)),
                ('company_code', models.CharField(db_index=True, default='KTL', max_length=20, unique=True)),
                ('business_license', models.CharField(blank=True, max_length=100, null=True)),
                ('vat_registration', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('logo_img', models.ImageField(blank=True, help_text='Main organization logo', null=True, upload_to='organization_logos/')),
                ('dark_logo_img', models.ImageField(blank=True, help_text='Dark theme logo', null=True, upload_to='organization_logos/')),
                ('lite_logo_img', models.ImageField(blank=True, help_text='Light theme logo', null=True, upload_to='organization_logos/')),
                ('banner_img', models.ImageField(blank=True, help_text='Banner image for portal', null=True, upload_to='organization_banners/')),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image for social sharing', null=True, upload_to='organization_og_images/')),
                ('favicon', models.ImageField(blank=True, help_text='Website favicon', null=True, upload_to='organization_favicons/')),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('organization_type', models.CharField(default='ISP', max_length=50)),
                ('nid_document', models.FileField(blank=True, null=True, upload_to='organization_documents/')),
                ('payment_report', models.FileField(blank=True, null=True, upload_to='organization_documents/')),
                ('invoice_signature', models.ImageField(blank=True, null=True, upload_to='organization_signatures/')),
                ('card_logo', models.ImageField(blank=True, null=True, upload_to='organization_logos/')),
                ('country', models.CharField(db_index=True, default='Bangladesh', max_length=100)),
                ('org_timezone', models.CharField(default='Asia/Dhaka', max_length=50)),
                ('currency', models.CharField(default='BDT', max_length=10)),
                ('revenue_sharing_enabled', models.BooleanField(default=True)),
                ('default_reseller_share', models.DecimalField(decimal_places=2, default=50.0, max_digits=5)),
                ('default_sub_reseller_share', models.DecimalField(decimal_places=2, default=45.0, max_digits=5)),
                ('default_ktl_share_with_sub', models.DecimalField(decimal_places=2, default=50.0, max_digits=5)),
                ('default_reseller_share_with_sub', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('api_version', models.CharField(default='v1.0', help_text='Dynamic API version for this organization', max_length=10)),
                ('auto_approval_enabled', models.BooleanField(default=False, help_text='Auto-approve new customer registrations')),
                ('customer_id_prefix', models.CharField(blank=True, help_text='Custom prefix for customer IDs (default: company_code)', max_length=10, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Default tax rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('vat_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='VAT rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('sms_notifications_enabled', models.BooleanField(default=True)),
                ('push_notifications_enabled', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Organization active status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'db_table': 'organizations',
                'indexes': [models.Index(fields=['company_code', 'is_active'], name='organizatio_company_83b2e1_idx'), models.Index(fields=['organization_type', 'is_active'], name='organizatio_organiz_f87970_idx'), models.Index(fields=['created_at', 'is_active'], name='organizatio_created_0c0592_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('default_reseller_share__gte', 0), ('default_reseller_share__lte', 100)), name='valid_reseller_share')],
            },
        ),
        migrations.CreateModel(
            name='BillingSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('max_manual_grace_days', models.IntegerField(default=9, help_text='Maximum manual grace days allowed')),
                ('disable_expiry', models.BooleanField(default=False, help_text='Disable automatic account expiry')),
                ('default_grace_days', models.IntegerField(default=1, help_text='Default grace period in days')),
                ('jump_billing', models.BooleanField(default=True, help_text='Enable jump billing for overdue accounts')),
                ('default_grace_hours', models.IntegerField(default=14, help_text='Default grace period in hours for hourly plans')),
                ('max_inactive_days', models.IntegerField(default=3, help_text='Maximum inactive days before account is disabled')),
                ('delete_permanent_disable_secret_from_mikrotik', models.IntegerField(default=1, help_text='Days before permanent disable is triggered')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='billing_settings', to='organizations.organizations')),
            ],
            options={
                'verbose_name': 'Billing Settings',
                'verbose_name_plural': 'Billing Settings',
                'db_table': 'billing_settings',
            },
        ),
        migrations.CreateModel(
            name='SyncSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_area_to_mikrotik', models.BooleanField(default=False, help_text='Sync area information to MikroTik')),
                ('sync_address_to_mikrotik', models.BooleanField(default=False, help_text='Sync customer address to MikroTik')),
                ('sync_customer_mobile_to_mikrotik', models.BooleanField(default=False, help_text='Sync customer mobile number to MikroTik')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sync_settings', to='organizations.organizations')),
            ],
            options={
                'verbose_name': 'Sync Settings',
                'verbose_name_plural': 'Sync Settings',
                'db_table': 'sync_settings',
            },
        ),
    ]
